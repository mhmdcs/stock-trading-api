RAPIDAPI_HOST=
RAPIDAPI_KEY=
# replace database with localhost (i.e. root@localhost) if running locally instead of dockerized
DATABASE_CONNECTION_STRING=cockroachdb+asyncpg://root@database:26257/defaultdb
# replace broker with localhost (i.e. RABBITMQ_HOST=localhost) if running locally instead of dockerized
RABBITMQ_HOST=broker
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest

# some CLI commands i forget about that i might need :)

# source venv/bin/activate
# deactivate
# uvicorn app.api.main:app --reload
# PYTHONPATH="$(pwd)" python app/api/main.py
# http://localhost:8000

# cockroach start-single-node --insecure --listen-addr=localhost --http-addr=localhost
# Local connection: cockroachdb://root@localhost:26257/defaultdb
# Admin Console: http://localhost:8080
# cockroach sql --insecure --host=localhost
# lsof -i :26257
# kill -9 PID

# rabbitmqctl status
# rabbitmq-plugins enable rabbitmq_management
# rabbitmq-server
# Local connection: amqp://guest:guest@localhost:5672/
# Admin Console: http://localhost:15672
# rabbitmqctl stop

# export PYTHONPATH="$(pwd)" python app/core/message_publisher.py

# export PYTHONPATH="$(pwd)" python app/event_subscriber/message_consumer.py

# export PYTHONPATH="$(pwd)" elery -A app.worker.celery_app worker --loglevel=info

# export PYTHONPATH="$(pwd)" celery -A app.worker.celery_app beat --loglevel=info

# `docker build -t trading-api -f dev_setup/Dockerfile`
# `docker run -p 8000:8000 trading-api` to test
# `docker compose build`
# `docker compose up`
# `docker compose down`
# `make up`
# `make down`


# create local test db

# connect to cockroachdb:
# cockroach sql --insecure --host=localhost:26257

# create trading_test_db database inside the SQL shell by running the following command:
#CREATE DATABASE trading_test_db;

#check if the database was created successfully:
#SHOW DATABASES;